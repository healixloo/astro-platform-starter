---
import Layout from '../layouts/Layout.astro';
import ContextAlert from '../components/ContextAlert.astro';
import Markdown from '../components/Markdown.astro';
import { cacheHeaders, randomInt } from '../utils';

export const prerender = false;

const tags = ['/revalidation', 'cats-related', 'all-pets-related'];
const headers = cacheHeaders(365, tags);

Object.entries(headers).map(([k, v]) => {
    Astro.response.headers.set(k, v);
});

const explainer = `

**How It Works**

1. **Invest in the Future**: Users can buy shares in a diverse range of promising startups, much like trading stocks. Each investment gives you a stake in the next wave of innovation.

2. **Engage Directly**: Unlike traditional investment models, [Platform Name] fosters direct interaction between investors and startups. Shareholders have exclusive access to products, participate in Q&A sessions with founders, and attend meetings to understand the company's vision and progress.

3. **Informed Decisions**: Regular updates, product reviews, and founder interactions empower investors to make well-informed decisions. Decide whether to hold, buy more, or sell your shares based on the latest insights and performance metrics.

4. **Regulated and Secure**: Our platform operates under stringent regulatory standards to ensure a safe and transparent investment environment. We prioritize the protection of both investors and startups, adhering to the highest levels of compliance and security.

`;

const exampleTag = tags[randomInt(0, tags.length - 1)];
---

<Layout title="Revalidation">
    <h1 class="mb-10">Revalidating Server Content</h1>
    <Markdown content={explainer} class="mb-10" />
    <button class="revalidate-button btn btn-primary" data-tag={exampleTag}>Invalidate tag: {exampleTag}</button>
    <button class="btn btn-primary" onclick="location.reload()">Reload page</button>
</Layout>

<script>
    function revalidate(tag: string) {
        fetch('/api/revalidate', {
            method: 'POST',
            body: JSON.stringify({ tags: [tag] }),
            headers: {
                'Content-Type': 'application/json'
            }
        });
        alert(`Invalidated tag: ${tag}`);
    }

    const revalidateButton = document.querySelectorAll('button.revalidate-button')[0];
    revalidateButton.addEventListener('click', (e) => {
        const tag = (e.target as HTMLButtonElement).getAttribute('data-tag');
        revalidate(tag);
    });
</script>
